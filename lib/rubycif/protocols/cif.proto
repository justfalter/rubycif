package RubyCif.Protocols.CIF;
// TODO -- version, namespace, etc

message FeedType {
    // pulled from RFC 5070 -- IODEF
    enum RestrictionType {
        Restriction_type_default        = 1;
        Restriction_type_need_to_know   = 2;
        Restriction_type_private        = 3;
        Restriction_type_public         = 4;
    }
    message MapType {
        required string key = 1;
        required string value = 2;
    }

    // TODO: this is a string for now
    // git describe will give off string references
    // based on the tags, may not be optimal
    required string version                  = 1;
    // guid should evolve to the ContactType from IODEF
    optional string guid                    = 2;
    
    // TODO: evolve this to Assessment Class
    optional int32 confidence               = 3;
    
    // TODO: MLStringType? or even Assessment?
    // combine with confidence class
    required string description             = 4;
    required string ReportTime              = 5;
    optional RestrictionType restriction    = 6;
    repeated MapType restriction_map        = 7;
    repeated MapType group_map              = 8;
    // TODO: research packed = true
    repeated bytes data                     = 9;
    
    optional string uuid                    = 10;
    optional int32 query_limit              = 11;
    
    repeated MapType feeds_map              = 12;
}
// TODO -- version, namespace, etc
// VERSION string should be set by make script (git describe or so)

message MessageType {
    enum StatusType {
        SUCCESS         = 1;
        FAILED          = 2;
        UNAUTHORIZED    = 3;
    }
    enum MsgType {
        QUERY       = 1;
        SUBMISSION  = 2;
        REPLY       = 3;
    }
    message QueryStruct {
        required string query   = 1;
        optional bool nolog     = 2;
    }
    message QueryType {
        optional string apikey      = 1;
        optional string guid        = 2;
        optional int32 limit        = 3;
        optional int32 confidence   = 4;
        repeated QueryStruct query  = 5;
        optional string description = 6;
        optional bool feed          = 7 [ default = false ];
    }
    message SubmissionType {
        optional string guid    = 1;
        repeated bytes data     = 2;
    }
    // TODO: this is a string for now
    // git describe will give off string references
    // based on the tags, may not be optimal
    required string version     = 1;
    required MsgType type       = 2;
    optional StatusType status  = 3;
    
    optional string apikey  = 4;

    // TODO: research [ packed = true ]
    // src/msg.proto:37:14: [packed = true] can only be specified for repeated primitive fields.
    repeated bytes data         = 5;
}
